SPRING BOOT APP

 Bu proje Spring Boot kullanarak modern bir web uygulamasÄ±nÄ±n nasÄ±l geliÅŸtirileceÄŸine dair temel ve uygulamalÄ± bir yol haritasÄ± sunar.


Proje kapsamÄ±nda:

ğŸ”¹ Spring Boot Ã§atÄ±sÄ±nÄ± kullanarak hÄ±zlÄ± ve yapÄ±landÄ±rmasÄ± kolay bir uygulama iskeleti oluÅŸturuldu.
ğŸ”¹ Book adlÄ± bir veri modeli tanÄ±mlayÄ±p bu modele ait temel id, title ve author alanlarÄ±nÄ± veritabanÄ±nda saklandÄ±.
ğŸ”¹ BookController ile RESTful API endpoint'leri geliÅŸtirildi: kitap ekleme, listeleme, gÃ¼ncelleme ve silme iÅŸlemlerini destekleyen GET, POST, PUT, DELETE HTTP metodlarÄ±yla Ã§alÄ±ÅŸÄ±ldÄ±.
ğŸ”¹ BookRepository arayÃ¼zÃ¼ sayesinde veritabanÄ± iÅŸlemleri (CRUD) kolaylÄ±kla gerÃ§ekleÅŸtirildi; Spring Data JPA bu iÅŸlemleri otomatikleÅŸtirdi.
ğŸ”¹ GeliÅŸtirme sÃ¼resince H2 bellek iÃ§i veritabanÄ± ile hÄ±zlÄ±ca test edilebilir bir ortam kuruldu.
ğŸ”¹ UygulamanÄ±n gÃ¼venilirliÄŸini saÄŸlamak iÃ§in @SpringBootTest ve MockMvc gibi gÃ¼Ã§lÃ¼ test sÄ±nÄ±flarÄ± kullanÄ±larak otomatik testler yazÄ±ldÄ±.
ğŸ”¹ AyrÄ±ca uygulamada oluÅŸabilecek hatalarÄ± yakalayÄ±p kullanÄ±cÄ± dostu mesajlar dÃ¶nmek iÃ§in @ControllerAdvice ve ExceptionHandler mekanizmalarÄ±yla merkezi hata yÃ¶netimi gerÃ§ekleÅŸtirildi.

 TÃ¼m bu sÃ¼reÃ§ boyunca Spring Boot'un modÃ¼ler yapÄ±sÄ±, az konfigÃ¼rasyonla Ã§ok iÅŸ yapabilme yeteneÄŸi ve geniÅŸ eklenti desteÄŸi ile neden bu kadar yaygÄ±n kullanÄ±ldÄ±ÄŸÄ±nÄ± deneyimleme fÄ±rsatÄ± elde edildi.

 Elbette bu proje Spring ekosisteminin sadece temel bir baÅŸlangÄ±Ã§ noktasÄ±dÄ±r. 


Ä°lerleyen sÃ¼reÃ§te:

- Spring Security ile yetkilendirme,

- Swagger/OpenAPI ile API dokÃ¼mantasyonu,

- Pagination & Sorting gibi veri yÃ¶netim teknikleri,

- DÄ±ÅŸ servislerle entegrasyon (REST template, WebClient),

- Production ortamÄ±na deploy etme (Docker, CI/CD),

 gibi konulara geÃ§ilerek bilgi daha da derinleÅŸtirilebilir.


 HazÄ±rlayan: Zeynep GÃ¶nÃ¼l
 05.07.2025 / i2i Systems